{"version":3,"file":"app.js","sourceRoot":"","sources":["src/app.ts"],"names":[],"mappings":"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","sourcesContent":["console.log('hello world');\r\n\r\nlet vertexSrc = `\r\nattribute vec3 aVertexPosition;\r\nattribute vec2 aTextureCoord;\r\n\r\nvarying vec2 vTextureCoord;\r\n\r\n\r\nvoid main(void) {\r\n    gl_Position = vec4(aVertexPosition, 1.0);\r\n    vTextureCoord = aTextureCoord;\r\n}`\r\n\r\nlet fragmentSrc = `\r\nprecision mediump float;\r\n\r\nvarying vec2 vTextureCoord;\r\n\r\nuniform sampler2D uSampler;\r\n\r\nvoid main(void) {\r\n    gl_FragColor = texture2D(uSampler, vec2(pow((vTextureCoord.s-0.5)*(vTextureCoord.s-0.5) + (vTextureCoord.t-0.5)*(vTextureCoord.t-0.5), 0.1), vTextureCoord.t));\r\n    //gl_FragColor = texture2D(uSampler, vec2(vTextureCoord.s*vTextureCoord.s*vTextureCoord.s*vTextureCoord.s*vTextureCoord.s*vTextureCoord.s, vTextureCoord.t*vTextureCoord.t*vTextureCoord.t*vTextureCoord.t));\r\n    //gl_FragColor = texture2D(uSampler, vec2(vTextureCoord.s, vTextureCoord.t));\r\n}`\r\n\r\nlet triagSize = 1;\r\n\r\nlet canvas:any = document.getElementById(\"main-canvas\");\r\nlet gl = canvas.getContext(\"webgl\") || canvas.getContext(\"experimental-webgl\");\r\ngl.viewportWidth = canvas.width;\r\ngl.viewportHeight = canvas.height;\r\n\r\nlet vertex = gl.createShader(gl.VERTEX_SHADER);\r\ngl.shaderSource(vertex, vertexSrc);\r\ngl.compileShader(vertex);\r\n\r\nif (!gl.getShaderParameter(vertex, gl.COMPILE_STATUS)) {\r\n    console.log(gl.getShaderInfoLog(vertex));\r\n}\r\n\r\nlet fragment = gl.createShader(gl.FRAGMENT_SHADER);\r\ngl.shaderSource(fragment, fragmentSrc);\r\ngl.compileShader(fragment);\r\n\r\nif (!gl.getShaderParameter(fragment, gl.COMPILE_STATUS)) {\r\n    console.log(gl.getShaderInfoLog(fragment));\r\n}\r\n\r\n\r\nlet shaderProgram = gl.createProgram();\r\ngl.attachShader(shaderProgram, vertex);\r\ngl.attachShader(shaderProgram, fragment);\r\ngl.linkProgram(shaderProgram);\r\n\r\nif (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\r\n    console.error(gl.getProgramInfoLog(shaderProgram));\r\n}\r\n\r\ngl.useProgram(shaderProgram);\r\n\r\nlet vertexPositionAttribute = gl.getAttribLocation(shaderProgram, \"aVertexPosition\");\r\ngl.enableVertexAttribArray(vertexPositionAttribute);\r\n\r\nlet textureCoordAttribute = gl.getAttribLocation(shaderProgram, \"aTextureCoord\");\r\ngl.enableVertexAttribArray(textureCoordAttribute);\r\n\r\nlet samplerUniform = gl.getUniformLocation(shaderProgram, \"uSampler\");\r\n\r\n\r\n\r\n\r\nlet cubeVertexPositionBuffer = gl.createBuffer();\r\ngl.bindBuffer(gl.ARRAY_BUFFER, cubeVertexPositionBuffer);\r\n\r\n\r\nlet vertices = [\r\n    // Front face\r\n    -triagSize,  triagSize,  1.0,\r\n    triagSize, -triagSize,  1.0,\r\n    triagSize,  triagSize,  1.0,\r\n    -triagSize,  triagSize,  1.0,\r\n    -triagSize, -triagSize,  1.0,\r\n    triagSize,  -triagSize,  1.0,\r\n];\r\ngl.bufferData(gl.ARRAY_BUFFER, new Float32Array(vertices), gl.STATIC_DRAW);\r\n\r\n\r\nlet cubeVertexTextureCoordBuffer = gl.createBuffer();\r\ngl.bindBuffer(gl.ARRAY_BUFFER, cubeVertexTextureCoordBuffer);\r\nvar textureCoords = [\r\n  // Front face\r\n  0.0, 1.0,\r\n  1.0, 0.0,\r\n  1.0, 1.0,\r\n  0.0, 1.0,\r\n  0.0, 0.0,\r\n  1.0, 0.0,\r\n];\r\ngl.bufferData(gl.ARRAY_BUFFER, new Float32Array(textureCoords), gl.STATIC_DRAW);\r\n\r\nlet texture = gl.createTexture();\r\ntexture.image = new Image();\r\n\r\ntexture.image.onload = function () {\r\n    gl.bindTexture(gl.TEXTURE_2D, texture);\r\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, texture.image);\r\n    \r\n    \r\n    function loadMip(level:number, size:number, color:number) {\r\n        let bytes = new Array<number>();\r\n        for (let i = 0; i < size*size*4; i+=4) {\r\n            bytes[i+0] = (color & 0xFF000000) >> 24;\r\n            bytes[i+1] = (color & 0x00FF0000) >> 16;\r\n            bytes[i+2] = (color & 0x0000FF00) >> 8;\r\n            bytes[i+3] = (color & 0x000000FF);\r\n        }\r\n        let data = new Uint8Array(bytes.length); //Uint8Array.from(bytes);\r\n        \r\n        for(var i = 0; i < data.length; i++) {\r\n            data[i] = bytes[i];\r\n        }\r\n        gl.texImage2D(gl.TEXTURE_2D, level, gl.RGBA, size, size, 0, gl.RGBA, gl.UNSIGNED_BYTE, data);\r\n    }\r\n    \r\n    //gl.generateMipmap(gl.TEXTURE_2D);\r\n    loadMip(1, 256, 0xFF0000FF);\r\n    loadMip(2, 128, 0x00FF00FF);\r\n    loadMip(3, 64, 0x0000FFFF);\r\n    loadMip(4, 32, 0xFF0000FF);\r\n    loadMip(5, 16, 0x00FF00FF);\r\n    loadMip(6, 8, 0x0000FFFF);\r\n    loadMip(7, 4, 0xFF0000FF);\r\n    loadMip(8, 2, 0x00FF00FF);\r\n    loadMip(9, 1, 0x0000FFFF);\r\n    \r\n    \r\n    \r\n    \r\n    // gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR );\r\n    // gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR );\r\n    // gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_BASE_LEVEL, 0);\r\n    // gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAX_LEVEL, 9);\r\n    gl.bindTexture(gl.TEXTURE_2D, null);\r\n    \r\n    \r\n    gl.clearColor(0.0, 0.0, 0.0, 1.0);\r\n    \r\n    gl.viewport(0, 0, gl.viewportWidth, gl.viewportHeight);\r\n    gl.clear(gl.COLOR_BUFFER_BIT);\r\n    \r\n    gl.bindBuffer(gl.ARRAY_BUFFER, cubeVertexPositionBuffer);\r\n    gl.vertexAttribPointer(vertexPositionAttribute, 3, gl.FLOAT, false, 0, 0);\r\n    \r\n    gl.bindBuffer(gl.ARRAY_BUFFER, cubeVertexTextureCoordBuffer);\r\n    gl.vertexAttribPointer(textureCoordAttribute, 2, gl.FLOAT, false, 0, 0);\r\n    \r\n    gl.activeTexture(gl.TEXTURE0);\r\n    gl.bindTexture(gl.TEXTURE_2D, texture);\r\n    gl.uniform1i(samplerUniform, 0);\r\n    \r\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\r\n}\r\ntexture.image.src = \"normal.png\";\r\n\r\n"]}